When would you want to use a remote repository rather than keeping all your work
local?

    - Keeping a copy in the cloud is always the safest option to reduce the risk
    of losing you work in case your hardware dies or get stolen or something
    like that.
    - If you are collaburating with other team members, the cloud will be a very
    convenient way of syncing your work
    - Cloud also makes it easy to share your work with the public

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    - It gives me the freedom to only share my progress when I want to
    - I also get the opportunity to only push changes when a logical change
    is complete in case I wanted the cloud to only have complete logical
    chunks of the code

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Branches are different paths where commits can be branched out of the
    master path so that they can have a separate development path.
    Clones are copies of the repository either in the local machine or the
    GitHub cloud.
    Forks are copies of a GitHub remote or local repo that are separate from
    each other but referenced. Development on the forked repo or remote is
    independent from the repo or remote it was forked from.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
